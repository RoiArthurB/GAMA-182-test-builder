# This workflow will build different GAMA release
# For more information see: https://github.com/actions/setup-java#apache-maven-with-a-settings-path

name: GAMA Generator

on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ main ]
  workflow_dispatch:  # For manual trigger


jobs:

  # ======================================================================
  # JDK 17 - HotSpot
  # ======================================================================

  jdk17-HotSpot-SWT_2021-03:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          repository: 'gama-platform/gama'
          ref: 'GAMA_1.8.2_jdk17'
      
      - name: Set up Temurin 17
        uses: actions/setup-java@v2 
        with:
          distribution: 'temurin'
          java-version: '17'
          java-package: jdk
          cache: 'maven'

      - name: Change SWT
        run: |
         # POM
         sed -i 's/releases\/2021-12/releases\/2021-03/g' $GITHUB_WORKSPACE/ummisco.gama.annotations/pom.xml
         sed -i 's/releases\/2021-12/releases\/2021-03/g' $GITHUB_WORKSPACE/msi.gama.processor/pom.xml
         sed -i 's/releases\/2021-12/releases\/2021-03/g' $GITHUB_WORKSPACE/msi.gama.parent/pom.xml
      
      - name: Build
        run: bash $GITHUB_WORKSPACE/travis/compile.sh
      
      - name: Zip
        run: bash $GITHUB_WORKSPACE/travis/zip_withjdk.sh
      
      - name: Test build headless
        run: bash $GITHUB_WORKSPACE/ummisco.gama.product/target/products/ummisco.gama.application.product/linux/gtk/x86_64/headless/gama-headless.sh -validate 
      
      - name: Prepare releases
        run: |
          mkdir $GITHUB_WORKSPACE/jdk17-HotSpot-SWT_2021-03
          mv $GITHUB_WORKSPACE/ummisco.gama.product/target/products/Gama1.7-linux.gtk.x86_64_withJDK.zip $GITHUB_WORKSPACE/jdk17-HotSpot-SWT_2021-03/Linux-jdk17-HotSpot-SWT_2021-03.zip
          mv $GITHUB_WORKSPACE/ummisco.gama.product/target/products/Gama1.7-win32.win32.x86_64_withJDK.zip $GITHUB_WORKSPACE/jdk17-HotSpot-SWT_2021-03/Windows-jdk17-HotSpot-SWT_2021-03.zip
          mv $GITHUB_WORKSPACE/ummisco.gama.product/target/products/Gama1.7-macosx.cocoa.x86_64_withJDK.zip $GITHUB_WORKSPACE/jdk17-HotSpot-SWT_2021-03/MacOS-jdk17-HotSpot-SWT_2021-03.zip
          ls -lh $GITHUB_WORKSPACE/jdk17-HotSpot-SWT_2021-03

      - uses: actions/upload-artifact@master
        env:
          working_directory: $GITHUB_WORKSPACE
        with:
          name: jdk17-HotSpot-SWT_2021-03
          path: ./jdk17-HotSpot-SWT_2021-03
  
  # ---

  jdk17-HotSpot-SWT_2021-06:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          repository: 'gama-platform/gama'
          ref: 'GAMA_1.8.2_jdk17'
      
      - name: Set up Temurin 17
        uses: actions/setup-java@v2 
        with:
          distribution: 'temurin'
          java-version: '17'
          java-package: jdk
          cache: 'maven'

      - name: Change SWT
        run: |
         # POM
         sed -i 's/releases\/2021-12/releases\/2021-06/g' $GITHUB_WORKSPACE/ummisco.gama.annotations/pom.xml
         sed -i 's/releases\/2021-12/releases\/2021-06/g' $GITHUB_WORKSPACE/msi.gama.processor/pom.xml
         sed -i 's/releases\/2021-12/releases\/2021-06/g' $GITHUB_WORKSPACE/msi.gama.parent/pom.xml
      
      - name: Build
        run: bash $GITHUB_WORKSPACE/travis/compile.sh
      
      - name: Zip
        run: bash $GITHUB_WORKSPACE/travis/zip_withjdk.sh
      
      - name: Test build headless
        run: bash $GITHUB_WORKSPACE/ummisco.gama.product/target/products/ummisco.gama.application.product/linux/gtk/x86_64/headless/gama-headless.sh -validate 
      
      - name: Prepare releases
        run: |
          mkdir $GITHUB_WORKSPACE/jdk17-HotSpot-SWT_2021-06
          mv $GITHUB_WORKSPACE/ummisco.gama.product/target/products/Gama1.7-linux.gtk.x86_64_withJDK.zip $GITHUB_WORKSPACE/jdk17-HotSpot-SWT_2021-06/Linux-jdk17-HotSpot-SWT_2021-06.zip
          mv $GITHUB_WORKSPACE/ummisco.gama.product/target/products/Gama1.7-win32.win32.x86_64_withJDK.zip $GITHUB_WORKSPACE/jdk17-HotSpot-SWT_2021-06/Windows-jdk17-HotSpot-SWT_2021-06.zip
          mv $GITHUB_WORKSPACE/ummisco.gama.product/target/products/Gama1.7-macosx.cocoa.x86_64_withJDK.zip $GITHUB_WORKSPACE/jdk17-HotSpot-SWT_2021-06/MacOS-jdk17-HotSpot-SWT_2021-06.zip
          ls -lh $GITHUB_WORKSPACE/jdk17-HotSpot-SWT_2021-06

      - uses: actions/upload-artifact@master
        env:
          working_directory: $GITHUB_WORKSPACE
        with:
          name: jdk17-HotSpot-SWT_2021-06
          path: ./jdk17-HotSpot-SWT_2021-06
  
  # ---

  jdk17-HotSpot-SWT_2021-09:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          repository: 'gama-platform/gama'
          ref: 'GAMA_1.8.2_jdk17'
      
      - name: Set up Temurin 17
        uses: actions/setup-java@v2 
        with:
          distribution: 'temurin'
          java-version: '17'
          java-package: jdk
          cache: 'maven'

      - name: Change SWT
        run: |
         # POM
         sed -i 's/releases\/2021-12/releases\/2021-09/g' $GITHUB_WORKSPACE/ummisco.gama.annotations/pom.xml
         sed -i 's/releases\/2021-12/releases\/2021-09/g' $GITHUB_WORKSPACE/msi.gama.processor/pom.xml
         sed -i 's/releases\/2021-12/releases\/2021-09/g' $GITHUB_WORKSPACE/msi.gama.parent/pom.xml
      
      - name: Build
        run: bash $GITHUB_WORKSPACE/travis/compile.sh
      
      - name: Zip
        run: bash $GITHUB_WORKSPACE/travis/zip_withjdk.sh
      
      - name: Test build headless
        run: bash $GITHUB_WORKSPACE/ummisco.gama.product/target/products/ummisco.gama.application.product/linux/gtk/x86_64/headless/gama-headless.sh -validate 
      
      - name: Prepare releases
        run: |
          mkdir $GITHUB_WORKSPACE/jdk17-HotSpot-SWT_2021-09
          mv $GITHUB_WORKSPACE/ummisco.gama.product/target/products/Gama1.7-linux.gtk.x86_64_withJDK.zip $GITHUB_WORKSPACE/jdk17-HotSpot-SWT_2021-09/Linux-jdk17-HotSpot-SWT_2021-09.zip
          mv $GITHUB_WORKSPACE/ummisco.gama.product/target/products/Gama1.7-win32.win32.x86_64_withJDK.zip $GITHUB_WORKSPACE/jdk17-HotSpot-SWT_2021-09/Windows-jdk17-HotSpot-SWT_2021-09.zip
          mv $GITHUB_WORKSPACE/ummisco.gama.product/target/products/Gama1.7-macosx.cocoa.x86_64_withJDK.zip $GITHUB_WORKSPACE/jdk17-HotSpot-SWT_2021-09/MacOS-jdk17-HotSpot-SWT_2021-09.zip
          ls -lh $GITHUB_WORKSPACE/jdk17-HotSpot-SWT_2021-09

      - uses: actions/upload-artifact@master
        env:
          working_directory: $GITHUB_WORKSPACE
        with:
          name: jdk17-HotSpot-SWT_2021-09
          path: ./jdk17-HotSpot-SWT_2021-09
  
  # ---

  jdk17-HotSpot-SWT_2021-12:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          repository: 'gama-platform/gama'
          ref: 'GAMA_1.8.2_jdk17'
      
      - name: Set up Temurin 17
        uses: actions/setup-java@v2 
        with:
          distribution: 'temurin'
          java-version: '17'
          java-package: jdk
          cache: 'maven'

      #- name: Change SWT
      #  run: |
      #   # POM
      #   sed -i 's/releases\/2021-12/releases\/2021-03/g' $GITHUB_WORKSPACE/ummisco.gama.annotations/pom.xml
      #   sed -i 's/releases\/2021-12/releases\/2021-03/g' $GITHUB_WORKSPACE/msi.gama.processor/pom.xml
      #   sed -i 's/releases\/2021-12/releases\/2021-03/g' $GITHUB_WORKSPACE/msi.gama.parent/pom.xml
      
      - name: Build
        run: bash $GITHUB_WORKSPACE/travis/compile.sh
      
      - name: Zip
        run: bash $GITHUB_WORKSPACE/travis/zip_withjdk.sh
      
      - name: Test build headless
        run: bash $GITHUB_WORKSPACE/ummisco.gama.product/target/products/ummisco.gama.application.product/linux/gtk/x86_64/headless/gama-headless.sh -validate 
      
      - name: Prepare releases
        run: |
          mkdir $GITHUB_WORKSPACE/jdk17-HotSpot-SWT_2021-12
          mv $GITHUB_WORKSPACE/ummisco.gama.product/target/products/Gama1.7-linux.gtk.x86_64_withJDK.zip $GITHUB_WORKSPACE/jdk17-HotSpot-SWT_2021-12/Linux-jdk17-HotSpot-SWT_2021-12.zip
          mv $GITHUB_WORKSPACE/ummisco.gama.product/target/products/Gama1.7-win32.win32.x86_64_withJDK.zip $GITHUB_WORKSPACE/jdk17-HotSpot-SWT_2021-12/Windows-jdk17-HotSpot-SWT_2021-12.zip
          mv $GITHUB_WORKSPACE/ummisco.gama.product/target/products/Gama1.7-macosx.cocoa.x86_64_withJDK.zip $GITHUB_WORKSPACE/jdk17-HotSpot-SWT_2021-12/MacOS-jdk17-HotSpot-SWT_2021-12.zip
          ls -lh $GITHUB_WORKSPACE/jdk17-HotSpot-SWT_2021-12

      - uses: actions/upload-artifact@master
        env:
          working_directory: $GITHUB_WORKSPACE
        with:
          name: jdk17-HotSpot-SWT_2021-12
          path: ./jdk17-HotSpot-SWT_2021-12

  # ======================================================================
  # Gather
  # ======================================================================

  gather_JDK17:
    needs: [jdk17-HotSpot-SWT_2021-03, jdk17-HotSpot-SWT_2021-06, jdk17-HotSpot-SWT_2021-09, jdk17-HotSpot-SWT_2021-12]
    runs-on: ubuntu-latest
    steps:

      - name: Get every builds
        env:
          working_directory: $GITHUB_WORKSPACE
        run: |
          mkdir ./artifacts
          mkdir ./release

      - uses: actions/download-artifact@master
        if: always()
        env:
          working_directory: $GITHUB_WORKSPACE
        with:
          name: jdk17-HotSpot-SWT_2021-03
          path: ./artifacts/jdk17-HotSpot-SWT_2021-03

      - uses: actions/download-artifact@master
        if: always()
        env:
          working_directory: $GITHUB_WORKSPACE
        with:
          name: jdk17-HotSpot-SWT_2021-06
          path: ./artifacts/jdk17-HotSpot-SWT_2021-06

      - uses: actions/download-artifact@master
        if: always()
        env:
          working_directory: $GITHUB_WORKSPACE
        with:
          name: jdk17-HotSpot-SWT_2021-09
          path: ./artifacts/jdk17-HotSpot-SWT_2021-09

      - uses: actions/download-artifact@master
        if: always()
        env:
          working_directory: $GITHUB_WORKSPACE
        with:
          name: jdk17-HotSpot-SWT_2021-12
          path: ./artifacts/jdk17-HotSpot-SWT_2021-12

      #- uses: actions/download-artifact@master
      #  if: always()
      #  env:
      #    working_directory: $GITHUB_WORKSPACE
      #  with:
      #    name: jdk17-OpenJ9-SWT_2021-03
      #    path: ./artifacts/jdk17-OpenJ9-SWT_2021-03
      #    
      #- uses: actions/download-artifact@master
      #  if: always()
      #  env:
      #    working_directory: $GITHUB_WORKSPACE
      #  with:
      #    name: jdk17-OpenJ9-SWT_2021-06
      #    path: ./artifacts/jdk17-OpenJ9-SWT_2021-06
      #    
      #- uses: actions/download-artifact@master
      #  if: always()
      #  env:
      #    working_directory: $GITHUB_WORKSPACE
      #  with:
      #    name: jdk17-OpenJ9-SWT_2021-09
      #    path: ./artifacts/jdk17-OpenJ9-SWT_2021-09

      - name: Prepare releases
        if: always()
        env:
          working_directory: $GITHUB_WORKSPACE
        run: |
          find ./artifacts -name "*zip" -exec mv {} ./release/ \;
          ls -lh ./release

      - uses: actions/upload-artifact@master
        env:
          working_directory: $GITHUB_WORKSPACE
        with:
          name: jdk17
          path: ./release/*zip

  # ======================================================================
  # ----------------------------------------------------------------------
  # ====================================================================== 
  
  lets-publish:
    needs: gather_JDK17
    runs-on: ubuntu-latest
    steps:

      - name: Get every builds
        env:
          working_directory: $GITHUB_WORKSPACE
        run: |
          mkdir ./artifacts
          mkdir ./release

      - uses: actions/download-artifact@master
        if: always()
        env:
          working_directory: $GITHUB_WORKSPACE
        with:
          name: jdk17
          path: ./artifacts/jdk17

      - name: Prepare releases
        if: always()
        env:
          working_directory: $GITHUB_WORKSPACE
        run: |
          find ./artifacts -name "*zip" -exec mv {} ./release/ \;
          ls -lh ./release

      - name: Prepare per OS zip
        if: always()
        env:
          working_directory: $GITHUB_WORKSPACE
        run: |
          # Linux
          zip Linux-All-In-One.zip ./release/Linux-*
          mv Linux-All-In-One.zip ./release
          # Windows
          zip Windows-All-In-One.zip ./release/Windows-*
          mv Windows-All-In-One.zip ./release
          # MacOS
          zip MacOS-All-In-One.zip ./release/MacOS-*
          mv MacOS-All-In-One.zip ./release

      - uses: "marvinpinto/action-automatic-releases@latest"
        env:
          working_directory: $GITHUB_WORKSPACE
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "latest"
          prerelease: false
          title: "Development Build"
          files: ./release/*.zip
